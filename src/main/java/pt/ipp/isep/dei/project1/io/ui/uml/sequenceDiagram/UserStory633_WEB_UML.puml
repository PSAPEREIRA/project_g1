@startuml
participant "POSTMAN" as U #DAE8FC
participant "Spring URL Resolver" as SR #DAE8FC
participant "us633:GetTheDayWithHighestTemperatureAmplitudeController" as C #DAE8FC
participant "HouseRepo" as HR #DAE8FC
participant "GeographicAreaRepo" as GR #DAE8FC
participant "ga:GeographicArea" as G #DAE8FC
participant "sensorClosest:Sensor" as S #DAE8FC
participant "lr:ListOfReading" as LR #DAE8FC


skinparam actor {
	BorderColor 6C8EBF
}

skinparam participant {
	BorderColor 6C8EBF
}

skinparam shadowing false

skinparam sequence {
	ArrowColor BLACK
	ActorBorderColor DeepSkyBlue
	LifeLineBorderColor BLACK
}

activate U
U -> SR:  GET ► house/geographic-area
activate SR
SR -> C: getGeographicAreaOfTheHouse()
deactivate SR
activate C
C -> HR: getGeographicAreaOfHouse()
HR --> C: String geographicAreaOfHouse
C --> U: true/false
deactivate C
U -> SR:  GET ► /house/geographic-area/sensors
activate SR
SR -> C: getGeographicAreaOfTheHouse()
deactivate SR
activate C
C -> GR: checkIfHaveSensorsOnHouseAreaWithTypeAndReadings(ga)
activate GR
GR ->G: checkIfHaveSensorsOnHouseAreaWithTypeAndReadings()
activate G
G --> GR: true/false
deactivate G
GR -->C: true/false
deactivate GR
C -->U: true/false
deactivate C

U->SR: GET ► /house/geographic-area/dates\n @BodyRequest(initialDate, finalDate)
activate SR
SR -> C: getGeographicAreaOfTheHouse()
deactivate SR
activate C
C -> GR: getDayWithHighestTemperatureAmplitude(initialDate, finalDate, houseLocation)
activate GR
GR->G: getDayWithHighestTemperatureAmplitude(initialDate, finalDate, houseLocation)
activate G
G -> G: getSensorClosest (houseLocation,sensorType)
G -> S:getHighestTemperatureAmplitudeAndDate(initialDate,finalDate)
activate S
S->LR: getHighestTemperatureAmplitudeAndDate(initialDate,finalDate)
activate LR
LR-->S: list of days with highest temperature amplitude
deactivate LR
S-->G: list of days with highest temperature amplitude
deactivate S
G-->GR: list of days with highest temperature amplitude
deactivate G
GR-->C: list of days with highest temperature amplitude
deactivate GR
C-->U: list of days with highest temperature amplitude
deactivate C


U->SR: GET ► /house/geographic-area/temperature\n @BodyRequest(initialDate, finalDate)
activate SR
SR -> C: getGeographicAreaOfTheHouse()
deactivate SR
activate C
C -> GR: getHighestTemperatureAmplitude(initialDate, finalDate, houseLocation)
activate GR
GR->G: getHighestTemperatureAmplitude(initialDate, finalDate, houseLocation)
activate G
G -> G: getSensorClosest (houseLocation,sensorType)
G -> S:getHighestTemperatureAmplitude(initialDate,finalDate)
activate S
S->LR: getHighestTemperatureAmplitude(initialDate,finalDate)
activate LR
LR-->S: highest temperature amplitude
deactivate LR
S-->G: highest temperature amplitude
deactivate S
G-->GR: highest temperature amplitude
deactivate G
GR-->C: highest temperature amplitude
deactivate GR
C-->U: highest temperature amplitude
deactivate C

deactivate U
@enduml